module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateCategory {
  count: Int!
}

type AggregateCategoryType {
  count: Int!
}

type AggregateCoupon {
  count: Int!
}

type AggregateCustomer {
  count: Int!
}

type AggregateOrder {
  count: Int!
}

type AggregateProduct {
  count: Int!
}

type AggregateSite {
  count: Int!
}

type AggregateStaff {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Category {
  id: ID!
  name: String!
  slug: String!
  image: String
  parent(where: CategoryTypeWhereInput, orderBy: CategoryTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CategoryType!]
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CategoryConnection {
  pageInfo: PageInfo!
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  id: ID
  name: String!
  slug: String!
  image: String
  parent: CategoryTypeCreateManyInput
  indexFile: String
  isDeleted: Int
}

input CategoryCreateManyInput {
  create: [CategoryCreateInput!]
  connect: [CategoryWhereUniqueInput!]
}

type CategoryEdge {
  node: Category!
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  image_ASC
  image_DESC
  indexFile_ASC
  indexFile_DESC
  isDeleted_ASC
  isDeleted_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CategoryPreviousValues {
  id: ID!
  name: String!
  slug: String!
  image: String
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CategoryScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CategoryScalarWhereInput!]
  OR: [CategoryScalarWhereInput!]
  NOT: [CategoryScalarWhereInput!]
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
  AND: [CategorySubscriptionWhereInput!]
}

type CategoryType {
  id: ID!
  name: String!
  slug: String!
  image: String
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CategoryTypeConnection {
  pageInfo: PageInfo!
  edges: [CategoryTypeEdge]!
  aggregate: AggregateCategoryType!
}

input CategoryTypeCreateInput {
  id: ID
  name: String!
  slug: String!
  image: String
  indexFile: String
  isDeleted: Int
}

input CategoryTypeCreateManyInput {
  create: [CategoryTypeCreateInput!]
  connect: [CategoryTypeWhereUniqueInput!]
}

type CategoryTypeEdge {
  node: CategoryType!
  cursor: String!
}

enum CategoryTypeOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  image_ASC
  image_DESC
  indexFile_ASC
  indexFile_DESC
  isDeleted_ASC
  isDeleted_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CategoryTypePreviousValues {
  id: ID!
  name: String!
  slug: String!
  image: String
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CategoryTypeScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CategoryTypeScalarWhereInput!]
  OR: [CategoryTypeScalarWhereInput!]
  NOT: [CategoryTypeScalarWhereInput!]
}

type CategoryTypeSubscriptionPayload {
  mutation: MutationType!
  node: CategoryType
  updatedFields: [String!]
  previousValues: CategoryTypePreviousValues
}

input CategoryTypeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CategoryTypeWhereInput
  AND: [CategoryTypeSubscriptionWhereInput!]
}

input CategoryTypeUpdateDataInput {
  name: String
  slug: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CategoryTypeUpdateInput {
  name: String
  slug: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CategoryTypeUpdateManyDataInput {
  name: String
  slug: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CategoryTypeUpdateManyInput {
  create: [CategoryTypeCreateInput!]
  update: [CategoryTypeUpdateWithWhereUniqueNestedInput!]
  upsert: [CategoryTypeUpsertWithWhereUniqueNestedInput!]
  delete: [CategoryTypeWhereUniqueInput!]
  connect: [CategoryTypeWhereUniqueInput!]
  set: [CategoryTypeWhereUniqueInput!]
  disconnect: [CategoryTypeWhereUniqueInput!]
  deleteMany: [CategoryTypeScalarWhereInput!]
  updateMany: [CategoryTypeUpdateManyWithWhereNestedInput!]
}

input CategoryTypeUpdateManyMutationInput {
  name: String
  slug: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CategoryTypeUpdateManyWithWhereNestedInput {
  where: CategoryTypeScalarWhereInput!
  data: CategoryTypeUpdateManyDataInput!
}

input CategoryTypeUpdateWithWhereUniqueNestedInput {
  where: CategoryTypeWhereUniqueInput!
  data: CategoryTypeUpdateDataInput!
}

input CategoryTypeUpsertWithWhereUniqueNestedInput {
  where: CategoryTypeWhereUniqueInput!
  update: CategoryTypeUpdateDataInput!
  create: CategoryTypeCreateInput!
}

input CategoryTypeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CategoryTypeWhereInput!]
}

input CategoryTypeWhereUniqueInput {
  id: ID
}

input CategoryUpdateDataInput {
  name: String
  slug: String
  image: String
  parent: CategoryTypeUpdateManyInput
  indexFile: String
  isDeleted: Int
}

input CategoryUpdateInput {
  name: String
  slug: String
  image: String
  parent: CategoryTypeUpdateManyInput
  indexFile: String
  isDeleted: Int
}

input CategoryUpdateManyDataInput {
  name: String
  slug: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CategoryUpdateManyInput {
  create: [CategoryCreateInput!]
  update: [CategoryUpdateWithWhereUniqueNestedInput!]
  upsert: [CategoryUpsertWithWhereUniqueNestedInput!]
  delete: [CategoryWhereUniqueInput!]
  connect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  deleteMany: [CategoryScalarWhereInput!]
  updateMany: [CategoryUpdateManyWithWhereNestedInput!]
}

input CategoryUpdateManyMutationInput {
  name: String
  slug: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CategoryUpdateManyWithWhereNestedInput {
  where: CategoryScalarWhereInput!
  data: CategoryUpdateManyDataInput!
}

input CategoryUpdateWithWhereUniqueNestedInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateDataInput!
}

input CategoryUpsertWithWhereUniqueNestedInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateDataInput!
  create: CategoryCreateInput!
}

input CategoryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  parent_some: CategoryTypeWhereInput
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CategoryWhereInput!]
}

input CategoryWhereUniqueInput {
  id: ID
}

type Coupon {
  id: ID!
  campaings_name: String!
  discount_percent: Int!
  discount_code: Int!
  number_code: Int!
  category_type(where: CategoryTypeWhereInput, orderBy: CategoryTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CategoryType!]
  minimum_amount_required: Int
  expiration_date: String!
  status: StatusCoupon
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CouponConnection {
  pageInfo: PageInfo!
  edges: [CouponEdge]!
  aggregate: AggregateCoupon!
}

input CouponCreateInput {
  id: ID
  campaings_name: String!
  discount_percent: Int!
  discount_code: Int!
  number_code: Int!
  category_type: CategoryTypeCreateManyInput
  minimum_amount_required: Int
  expiration_date: String!
  status: StatusCoupon
  indexFile: String
  isDeleted: Int
}

type CouponEdge {
  node: Coupon!
  cursor: String!
}

enum CouponOrderByInput {
  id_ASC
  id_DESC
  campaings_name_ASC
  campaings_name_DESC
  discount_percent_ASC
  discount_percent_DESC
  discount_code_ASC
  discount_code_DESC
  number_code_ASC
  number_code_DESC
  minimum_amount_required_ASC
  minimum_amount_required_DESC
  expiration_date_ASC
  expiration_date_DESC
  status_ASC
  status_DESC
  indexFile_ASC
  indexFile_DESC
  isDeleted_ASC
  isDeleted_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CouponPreviousValues {
  id: ID!
  campaings_name: String!
  discount_percent: Int!
  discount_code: Int!
  number_code: Int!
  minimum_amount_required: Int
  expiration_date: String!
  status: StatusCoupon
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CouponSubscriptionPayload {
  mutation: MutationType!
  node: Coupon
  updatedFields: [String!]
  previousValues: CouponPreviousValues
}

input CouponSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CouponWhereInput
  AND: [CouponSubscriptionWhereInput!]
}

input CouponUpdateInput {
  campaings_name: String
  discount_percent: Int
  discount_code: Int
  number_code: Int
  category_type: CategoryTypeUpdateManyInput
  minimum_amount_required: Int
  expiration_date: String
  status: StatusCoupon
  indexFile: String
  isDeleted: Int
}

input CouponUpdateManyMutationInput {
  campaings_name: String
  discount_percent: Int
  discount_code: Int
  number_code: Int
  minimum_amount_required: Int
  expiration_date: String
  status: StatusCoupon
  indexFile: String
  isDeleted: Int
}

input CouponWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  campaings_name: String
  campaings_name_not: String
  campaings_name_in: [String!]
  campaings_name_not_in: [String!]
  campaings_name_lt: String
  campaings_name_lte: String
  campaings_name_gt: String
  campaings_name_gte: String
  campaings_name_contains: String
  campaings_name_not_contains: String
  campaings_name_starts_with: String
  campaings_name_not_starts_with: String
  campaings_name_ends_with: String
  campaings_name_not_ends_with: String
  discount_percent: Int
  discount_percent_not: Int
  discount_percent_in: [Int!]
  discount_percent_not_in: [Int!]
  discount_percent_lt: Int
  discount_percent_lte: Int
  discount_percent_gt: Int
  discount_percent_gte: Int
  discount_code: Int
  discount_code_not: Int
  discount_code_in: [Int!]
  discount_code_not_in: [Int!]
  discount_code_lt: Int
  discount_code_lte: Int
  discount_code_gt: Int
  discount_code_gte: Int
  number_code: Int
  number_code_not: Int
  number_code_in: [Int!]
  number_code_not_in: [Int!]
  number_code_lt: Int
  number_code_lte: Int
  number_code_gt: Int
  number_code_gte: Int
  category_type_some: CategoryTypeWhereInput
  minimum_amount_required: Int
  minimum_amount_required_not: Int
  minimum_amount_required_in: [Int!]
  minimum_amount_required_not_in: [Int!]
  minimum_amount_required_lt: Int
  minimum_amount_required_lte: Int
  minimum_amount_required_gt: Int
  minimum_amount_required_gte: Int
  expiration_date: String
  expiration_date_not: String
  expiration_date_in: [String!]
  expiration_date_not_in: [String!]
  expiration_date_lt: String
  expiration_date_lte: String
  expiration_date_gt: String
  expiration_date_gte: String
  expiration_date_contains: String
  expiration_date_not_contains: String
  expiration_date_starts_with: String
  expiration_date_not_starts_with: String
  expiration_date_ends_with: String
  expiration_date_not_ends_with: String
  status: StatusCoupon
  status_not: StatusCoupon
  status_in: [StatusCoupon!]
  status_not_in: [StatusCoupon!]
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CouponWhereInput!]
}

input CouponWhereUniqueInput {
  id: ID
}

type Customer {
  id: ID!
  name: String!
  phone: String
  unit: String
  total_order: Int
  total_amount: Int
  email: String!
  password: String!
  image: String
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CustomerConnection {
  pageInfo: PageInfo!
  edges: [CustomerEdge]!
  aggregate: AggregateCustomer!
}

input CustomerCreateInput {
  id: ID
  name: String!
  phone: String
  unit: String
  total_order: Int
  total_amount: Int
  email: String!
  password: String!
  image: String
  indexFile: String
  isDeleted: Int
}

input CustomerCreateManyInput {
  create: [CustomerCreateInput!]
  connect: [CustomerWhereUniqueInput!]
}

type CustomerEdge {
  node: Customer!
  cursor: String!
}

enum CustomerOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  phone_ASC
  phone_DESC
  unit_ASC
  unit_DESC
  total_order_ASC
  total_order_DESC
  total_amount_ASC
  total_amount_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  image_ASC
  image_DESC
  indexFile_ASC
  indexFile_DESC
  isDeleted_ASC
  isDeleted_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CustomerPreviousValues {
  id: ID!
  name: String!
  phone: String
  unit: String
  total_order: Int
  total_amount: Int
  email: String!
  password: String!
  image: String
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CustomerScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  total_order: Int
  total_order_not: Int
  total_order_in: [Int!]
  total_order_not_in: [Int!]
  total_order_lt: Int
  total_order_lte: Int
  total_order_gt: Int
  total_order_gte: Int
  total_amount: Int
  total_amount_not: Int
  total_amount_in: [Int!]
  total_amount_not_in: [Int!]
  total_amount_lt: Int
  total_amount_lte: Int
  total_amount_gt: Int
  total_amount_gte: Int
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CustomerScalarWhereInput!]
  OR: [CustomerScalarWhereInput!]
  NOT: [CustomerScalarWhereInput!]
}

type CustomerSubscriptionPayload {
  mutation: MutationType!
  node: Customer
  updatedFields: [String!]
  previousValues: CustomerPreviousValues
}

input CustomerSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CustomerWhereInput
  AND: [CustomerSubscriptionWhereInput!]
}

input CustomerUpdateDataInput {
  name: String
  phone: String
  unit: String
  total_order: Int
  total_amount: Int
  email: String
  password: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CustomerUpdateInput {
  name: String
  phone: String
  unit: String
  total_order: Int
  total_amount: Int
  email: String
  password: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CustomerUpdateManyDataInput {
  name: String
  phone: String
  unit: String
  total_order: Int
  total_amount: Int
  email: String
  password: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CustomerUpdateManyInput {
  create: [CustomerCreateInput!]
  update: [CustomerUpdateWithWhereUniqueNestedInput!]
  upsert: [CustomerUpsertWithWhereUniqueNestedInput!]
  delete: [CustomerWhereUniqueInput!]
  connect: [CustomerWhereUniqueInput!]
  set: [CustomerWhereUniqueInput!]
  disconnect: [CustomerWhereUniqueInput!]
  deleteMany: [CustomerScalarWhereInput!]
  updateMany: [CustomerUpdateManyWithWhereNestedInput!]
}

input CustomerUpdateManyMutationInput {
  name: String
  phone: String
  unit: String
  total_order: Int
  total_amount: Int
  email: String
  password: String
  image: String
  indexFile: String
  isDeleted: Int
}

input CustomerUpdateManyWithWhereNestedInput {
  where: CustomerScalarWhereInput!
  data: CustomerUpdateManyDataInput!
}

input CustomerUpdateWithWhereUniqueNestedInput {
  where: CustomerWhereUniqueInput!
  data: CustomerUpdateDataInput!
}

input CustomerUpsertWithWhereUniqueNestedInput {
  where: CustomerWhereUniqueInput!
  update: CustomerUpdateDataInput!
  create: CustomerCreateInput!
}

input CustomerWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  total_order: Int
  total_order_not: Int
  total_order_in: [Int!]
  total_order_not_in: [Int!]
  total_order_lt: Int
  total_order_lte: Int
  total_order_gt: Int
  total_order_gte: Int
  total_amount: Int
  total_amount_not: Int
  total_amount_in: [Int!]
  total_amount_not_in: [Int!]
  total_amount_lt: Int
  total_amount_lte: Int
  total_amount_gt: Int
  total_amount_gte: Int
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CustomerWhereInput!]
}

input CustomerWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Long

type Mutation {
  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  createCategoryType(data: CategoryTypeCreateInput!): CategoryType!
  updateCategoryType(data: CategoryTypeUpdateInput!, where: CategoryTypeWhereUniqueInput!): CategoryType
  updateManyCategoryTypes(data: CategoryTypeUpdateManyMutationInput!, where: CategoryTypeWhereInput): BatchPayload!
  upsertCategoryType(where: CategoryTypeWhereUniqueInput!, create: CategoryTypeCreateInput!, update: CategoryTypeUpdateInput!): CategoryType!
  deleteCategoryType(where: CategoryTypeWhereUniqueInput!): CategoryType
  deleteManyCategoryTypes(where: CategoryTypeWhereInput): BatchPayload!
  createCoupon(data: CouponCreateInput!): Coupon!
  updateCoupon(data: CouponUpdateInput!, where: CouponWhereUniqueInput!): Coupon
  updateManyCoupons(data: CouponUpdateManyMutationInput!, where: CouponWhereInput): BatchPayload!
  upsertCoupon(where: CouponWhereUniqueInput!, create: CouponCreateInput!, update: CouponUpdateInput!): Coupon!
  deleteCoupon(where: CouponWhereUniqueInput!): Coupon
  deleteManyCoupons(where: CouponWhereInput): BatchPayload!
  createCustomer(data: CustomerCreateInput!): Customer!
  updateCustomer(data: CustomerUpdateInput!, where: CustomerWhereUniqueInput!): Customer
  updateManyCustomers(data: CustomerUpdateManyMutationInput!, where: CustomerWhereInput): BatchPayload!
  upsertCustomer(where: CustomerWhereUniqueInput!, create: CustomerCreateInput!, update: CustomerUpdateInput!): Customer!
  deleteCustomer(where: CustomerWhereUniqueInput!): Customer
  deleteManyCustomers(where: CustomerWhereInput): BatchPayload!
  createOrder(data: OrderCreateInput!): Order!
  updateOrder(data: OrderUpdateInput!, where: OrderWhereUniqueInput!): Order
  updateManyOrders(data: OrderUpdateManyMutationInput!, where: OrderWhereInput): BatchPayload!
  upsertOrder(where: OrderWhereUniqueInput!, create: OrderCreateInput!, update: OrderUpdateInput!): Order!
  deleteOrder(where: OrderWhereUniqueInput!): Order
  deleteManyOrders(where: OrderWhereInput): BatchPayload!
  createProduct(data: ProductCreateInput!): Product!
  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  updateManyProducts(data: ProductUpdateManyMutationInput!, where: ProductWhereInput): BatchPayload!
  upsertProduct(where: ProductWhereUniqueInput!, create: ProductCreateInput!, update: ProductUpdateInput!): Product!
  deleteProduct(where: ProductWhereUniqueInput!): Product
  deleteManyProducts(where: ProductWhereInput): BatchPayload!
  createSite(data: SiteCreateInput!): Site!
  updateSite(data: SiteUpdateInput!, where: SiteWhereUniqueInput!): Site
  updateManySites(data: SiteUpdateManyMutationInput!, where: SiteWhereInput): BatchPayload!
  upsertSite(where: SiteWhereUniqueInput!, create: SiteCreateInput!, update: SiteUpdateInput!): Site!
  deleteSite(where: SiteWhereUniqueInput!): Site
  deleteManySites(where: SiteWhereInput): BatchPayload!
  createStaff(data: StaffCreateInput!): Staff!
  updateStaff(data: StaffUpdateInput!, where: StaffWhereUniqueInput!): Staff
  updateManyStaffs(data: StaffUpdateManyMutationInput!, where: StaffWhereInput): BatchPayload!
  upsertStaff(where: StaffWhereUniqueInput!, create: StaffCreateInput!, update: StaffUpdateInput!): Staff!
  deleteStaff(where: StaffWhereUniqueInput!): Staff
  deleteManyStaffs(where: StaffWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type Order {
  id: ID!
  ship_address: String!
  amount: Int!
  payment_method: PaymentMethod
  status: StatusOrder
  customer(where: CustomerWhereInput, orderBy: CustomerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Customer!]
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type OrderConnection {
  pageInfo: PageInfo!
  edges: [OrderEdge]!
  aggregate: AggregateOrder!
}

input OrderCreateInput {
  id: ID
  ship_address: String!
  amount: Int!
  payment_method: PaymentMethod
  status: StatusOrder
  customer: CustomerCreateManyInput
  indexFile: String
  isDeleted: Int
}

type OrderEdge {
  node: Order!
  cursor: String!
}

enum OrderOrderByInput {
  id_ASC
  id_DESC
  ship_address_ASC
  ship_address_DESC
  amount_ASC
  amount_DESC
  payment_method_ASC
  payment_method_DESC
  status_ASC
  status_DESC
  indexFile_ASC
  indexFile_DESC
  isDeleted_ASC
  isDeleted_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type OrderPreviousValues {
  id: ID!
  ship_address: String!
  amount: Int!
  payment_method: PaymentMethod
  status: StatusOrder
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type OrderSubscriptionPayload {
  mutation: MutationType!
  node: Order
  updatedFields: [String!]
  previousValues: OrderPreviousValues
}

input OrderSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: OrderWhereInput
  AND: [OrderSubscriptionWhereInput!]
}

input OrderUpdateInput {
  ship_address: String
  amount: Int
  payment_method: PaymentMethod
  status: StatusOrder
  customer: CustomerUpdateManyInput
  indexFile: String
  isDeleted: Int
}

input OrderUpdateManyMutationInput {
  ship_address: String
  amount: Int
  payment_method: PaymentMethod
  status: StatusOrder
  indexFile: String
  isDeleted: Int
}

input OrderWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  ship_address: String
  ship_address_not: String
  ship_address_in: [String!]
  ship_address_not_in: [String!]
  ship_address_lt: String
  ship_address_lte: String
  ship_address_gt: String
  ship_address_gte: String
  ship_address_contains: String
  ship_address_not_contains: String
  ship_address_starts_with: String
  ship_address_not_starts_with: String
  ship_address_ends_with: String
  ship_address_not_ends_with: String
  amount: Int
  amount_not: Int
  amount_in: [Int!]
  amount_not_in: [Int!]
  amount_lt: Int
  amount_lte: Int
  amount_gt: Int
  amount_gte: Int
  payment_method: PaymentMethod
  payment_method_not: PaymentMethod
  payment_method_in: [PaymentMethod!]
  payment_method_not_in: [PaymentMethod!]
  status: StatusOrder
  status_not: StatusOrder
  status_in: [StatusOrder!]
  status_not_in: [StatusOrder!]
  customer_some: CustomerWhereInput
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [OrderWhereInput!]
}

input OrderWhereUniqueInput {
  id: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

enum PaymentMethod {
  BANKING
  CASH_ON_SHIP
}

type Product {
  id: ID!
  name: String!
  description: String!
  unit: String
  price: Int!
  sale_price: Int
  discount_percent: Int
  quantity: Int!
  image: String
  category_type(where: CategoryTypeWhereInput, orderBy: CategoryTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CategoryType!]
  category(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductConnection {
  pageInfo: PageInfo!
  edges: [ProductEdge]!
  aggregate: AggregateProduct!
}

input ProductCreateInput {
  id: ID
  name: String!
  description: String!
  unit: String
  price: Int!
  sale_price: Int
  discount_percent: Int
  quantity: Int!
  image: String
  category_type: CategoryTypeCreateManyInput
  category: CategoryCreateManyInput
  indexFile: String
  isDeleted: Int
}

type ProductEdge {
  node: Product!
  cursor: String!
}

enum ProductOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  unit_ASC
  unit_DESC
  price_ASC
  price_DESC
  sale_price_ASC
  sale_price_DESC
  discount_percent_ASC
  discount_percent_DESC
  quantity_ASC
  quantity_DESC
  image_ASC
  image_DESC
  indexFile_ASC
  indexFile_DESC
  isDeleted_ASC
  isDeleted_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProductPreviousValues {
  id: ID!
  name: String!
  description: String!
  unit: String
  price: Int!
  sale_price: Int
  discount_percent: Int
  quantity: Int!
  image: String
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductSubscriptionPayload {
  mutation: MutationType!
  node: Product
  updatedFields: [String!]
  previousValues: ProductPreviousValues
}

input ProductSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProductWhereInput
  AND: [ProductSubscriptionWhereInput!]
}

input ProductUpdateInput {
  name: String
  description: String
  unit: String
  price: Int
  sale_price: Int
  discount_percent: Int
  quantity: Int
  image: String
  category_type: CategoryTypeUpdateManyInput
  category: CategoryUpdateManyInput
  indexFile: String
  isDeleted: Int
}

input ProductUpdateManyMutationInput {
  name: String
  description: String
  unit: String
  price: Int
  sale_price: Int
  discount_percent: Int
  quantity: Int
  image: String
  indexFile: String
  isDeleted: Int
}

input ProductWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  price: Int
  price_not: Int
  price_in: [Int!]
  price_not_in: [Int!]
  price_lt: Int
  price_lte: Int
  price_gt: Int
  price_gte: Int
  sale_price: Int
  sale_price_not: Int
  sale_price_in: [Int!]
  sale_price_not_in: [Int!]
  sale_price_lt: Int
  sale_price_lte: Int
  sale_price_gt: Int
  sale_price_gte: Int
  discount_percent: Int
  discount_percent_not: Int
  discount_percent_in: [Int!]
  discount_percent_not_in: [Int!]
  discount_percent_lt: Int
  discount_percent_lte: Int
  discount_percent_gt: Int
  discount_percent_gte: Int
  quantity: Int
  quantity_not: Int
  quantity_in: [Int!]
  quantity_not_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_gt: Int
  quantity_gte: Int
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  category_type_some: CategoryTypeWhereInput
  category_some: CategoryWhereInput
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProductWhereInput!]
}

input ProductWhereUniqueInput {
  id: ID
}

type Query {
  category(where: CategoryWhereUniqueInput!): Category
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!
  categoryType(where: CategoryTypeWhereUniqueInput!): CategoryType
  categoryTypes(where: CategoryTypeWhereInput, orderBy: CategoryTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CategoryType]!
  categoryTypesConnection(where: CategoryTypeWhereInput, orderBy: CategoryTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryTypeConnection!
  coupon(where: CouponWhereUniqueInput!): Coupon
  coupons(where: CouponWhereInput, orderBy: CouponOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Coupon]!
  couponsConnection(where: CouponWhereInput, orderBy: CouponOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CouponConnection!
  customer(where: CustomerWhereUniqueInput!): Customer
  customers(where: CustomerWhereInput, orderBy: CustomerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Customer]!
  customersConnection(where: CustomerWhereInput, orderBy: CustomerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CustomerConnection!
  order(where: OrderWhereUniqueInput!): Order
  orders(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Order]!
  ordersConnection(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OrderConnection!
  product(where: ProductWhereUniqueInput!): Product
  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product]!
  productsConnection(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductConnection!
  site(where: SiteWhereUniqueInput!): Site
  sites(where: SiteWhereInput, orderBy: SiteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Site]!
  sitesConnection(where: SiteWhereInput, orderBy: SiteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SiteConnection!
  staff(where: StaffWhereUniqueInput!): Staff
  staffs(where: StaffWhereInput, orderBy: StaffOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Staff]!
  staffsConnection(where: StaffWhereInput, orderBy: StaffOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StaffConnection!
  node(id: ID!): Node
}

enum Role {
  ADMIN
  MANAGER
  MEMBER
  SHIPER
  UNSET
}

type Site {
  id: ID!
  name: String
  description: String
  status: StatusSite
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SiteConnection {
  pageInfo: PageInfo!
  edges: [SiteEdge]!
  aggregate: AggregateSite!
}

input SiteCreateInput {
  id: ID
  name: String
  description: String
  status: StatusSite
  indexFile: String
  isDeleted: Int
}

type SiteEdge {
  node: Site!
  cursor: String!
}

enum SiteOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  status_ASC
  status_DESC
  indexFile_ASC
  indexFile_DESC
  isDeleted_ASC
  isDeleted_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SitePreviousValues {
  id: ID!
  name: String
  description: String
  status: StatusSite
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SiteSubscriptionPayload {
  mutation: MutationType!
  node: Site
  updatedFields: [String!]
  previousValues: SitePreviousValues
}

input SiteSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SiteWhereInput
  AND: [SiteSubscriptionWhereInput!]
}

input SiteUpdateInput {
  name: String
  description: String
  status: StatusSite
  indexFile: String
  isDeleted: Int
}

input SiteUpdateManyMutationInput {
  name: String
  description: String
  status: StatusSite
  indexFile: String
  isDeleted: Int
}

input SiteWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  status: StatusSite
  status_not: StatusSite
  status_in: [StatusSite!]
  status_not_in: [StatusSite!]
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [SiteWhereInput!]
}

input SiteWhereUniqueInput {
  id: ID
}

type Staff {
  id: ID!
  name: String!
  phone: String
  email: String!
  password: String!
  role: Role
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type StaffConnection {
  pageInfo: PageInfo!
  edges: [StaffEdge]!
  aggregate: AggregateStaff!
}

input StaffCreateInput {
  id: ID
  name: String!
  phone: String
  email: String!
  password: String!
  role: Role
  indexFile: String
  isDeleted: Int
}

type StaffEdge {
  node: Staff!
  cursor: String!
}

enum StaffOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  role_ASC
  role_DESC
  indexFile_ASC
  indexFile_DESC
  isDeleted_ASC
  isDeleted_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type StaffPreviousValues {
  id: ID!
  name: String!
  phone: String
  email: String!
  password: String!
  role: Role
  indexFile: String
  isDeleted: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type StaffSubscriptionPayload {
  mutation: MutationType!
  node: Staff
  updatedFields: [String!]
  previousValues: StaffPreviousValues
}

input StaffSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: StaffWhereInput
  AND: [StaffSubscriptionWhereInput!]
}

input StaffUpdateInput {
  name: String
  phone: String
  email: String
  password: String
  role: Role
  indexFile: String
  isDeleted: Int
}

input StaffUpdateManyMutationInput {
  name: String
  phone: String
  email: String
  password: String
  role: Role
  indexFile: String
  isDeleted: Int
}

input StaffWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  role: Role
  role_not: Role
  role_in: [Role!]
  role_not_in: [Role!]
  indexFile: String
  indexFile_not: String
  indexFile_in: [String!]
  indexFile_not_in: [String!]
  indexFile_lt: String
  indexFile_lte: String
  indexFile_gt: String
  indexFile_gte: String
  indexFile_contains: String
  indexFile_not_contains: String
  indexFile_starts_with: String
  indexFile_not_starts_with: String
  indexFile_ends_with: String
  indexFile_not_ends_with: String
  isDeleted: Int
  isDeleted_not: Int
  isDeleted_in: [Int!]
  isDeleted_not_in: [Int!]
  isDeleted_lt: Int
  isDeleted_lte: Int
  isDeleted_gt: Int
  isDeleted_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [StaffWhereInput!]
}

input StaffWhereUniqueInput {
  id: ID
}

enum StatusCoupon {
  ACTIVE
  REVOKED
}

enum StatusOrder {
  SHIPPING
  PENDING
  FAILED
  PROCESSING
}

enum StatusSite {
  ACTIVE
  MAINTAIN
  DOWN
}

type Subscription {
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  categoryType(where: CategoryTypeSubscriptionWhereInput): CategoryTypeSubscriptionPayload
  coupon(where: CouponSubscriptionWhereInput): CouponSubscriptionPayload
  customer(where: CustomerSubscriptionWhereInput): CustomerSubscriptionPayload
  order(where: OrderSubscriptionWhereInput): OrderSubscriptionPayload
  product(where: ProductSubscriptionWhereInput): ProductSubscriptionPayload
  site(where: SiteSubscriptionWhereInput): SiteSubscriptionPayload
  staff(where: StaffSubscriptionWhereInput): StaffSubscriptionPayload
}
`
      }
    